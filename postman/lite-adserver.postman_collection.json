{
    "info": {
      "name": "Lite AdServer API",
      "description": "Postman collection for Lite AdServer API. Import this into Postman to test the endpoints.",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
      {
        "key": "base_url",
        "value": "localhost:8787",
        "type": "string"
      },
      {
        "key": "api_key",
        "value": "test-api-key-1234567890",
        "type": "string"
      },
      {
        "key": "test_campaign_id",
        "value": "",
        "type": "string"
      }
    ],
    "auth": {
      "type": "bearer",
      "bearer": [
        {
          "key": "token",
          "value": "{{api_key}}",
          "type": "string"
        }
      ]
    },
    "item": [
      {
        "name": "Campaign Lifecycle Tests",
        "item": [
          {
            "name": "1. Create Test Campaign",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200 or 201\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                    "});",
                    "",
                    "pm.test(\"Response has campaign ID\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.id).to.exist;",
                    "    ",
                    "    // Store campaign ID for next tests",
                    "    pm.collectionVariables.set(\"test_campaign_id\", jsonData.id);",
                    "    console.log(\"Created campaign with ID: \" + jsonData.id);",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Automated Test Campaign\",\n  \"redirect_url\": \"https://example.com/test-campaign\",\n  \"start_date\": {{$timestamp}},\n  \"targeting_rules\": [\n    {\n      \"targeting_rule_type_id\": 4,\n      \"targeting_method\": \"whitelist\",\n      \"rule\": \"1,2\",\n      \"weight\": 100\n    }\n  ]\n}"
              },
              "url": {
                "raw": "{{base_url}}/api/campaigns",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns"]
              },
              "description": "Creates a new campaign for testing and stores its ID for subsequent requests."
            }
          },
          {
            "name": "2. Update Test Campaign",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.expect(pm.response.code).to.equal(200);",
                    "});",
                    "",
                    "pm.test(\"Response has updated campaign ID\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.id).to.exist;",
                    "    pm.expect(jsonData.id).to.equal(Number(pm.collectionVariables.get(\"test_campaign_id\")));",
                    "    ",
                    "    console.log(\"Updated campaign with ID: \" + jsonData.id);",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Updated Test Campaign\",\n  \"redirect_url\": \"https://example.com/updated-test\",\n  \"status\": \"active\"\n}"
              },
              "url": {
                "raw": "{{base_url}}/api/campaigns/{{test_campaign_id}}",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns", "{{test_campaign_id}}"]
              },
              "description": "Updates the test campaign using the stored ID."
            }
          },
          {
            "name": "3. Get Test Campaign",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.expect(pm.response.code).to.equal(200);",
                    "});",
                    "",
                    "pm.test(\"Campaign data is correct\", function () {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData.id).to.equal(Number(pm.collectionVariables.get(\"test_campaign_id\")));",
                    "    pm.expect(jsonData.name).to.equal(\"Updated Test Campaign\");",
                    "    pm.expect(jsonData.redirect_url).to.equal(\"https://example.com/updated-test\");",
                    "    pm.expect(jsonData.status).to.equal(\"active\");",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/campaigns/{{test_campaign_id}}",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns", "{{test_campaign_id}}"]
              },
              "description": "Retrieves the test campaign to verify the update was successful."
            }
          },
          {
            "name": "4. Delete Test Campaign",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 204\", function () {",
                    "    pm.expect(pm.response.code).to.equal(204);",
                    "});",
                    "",
                    "// Clear the variable after successful deletion",
                    "pm.collectionVariables.set(\"test_campaign_id\", \"\");"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "DELETE",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/campaigns/{{test_campaign_id}}",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns", "{{test_campaign_id}}"]
              },
              "description": "Deletes the test campaign."
            }
          },
          {
            "name": "5. Verify Campaign Deletion",
            "event": [
              {
                "listen": "test",
                "script": {
                  "exec": [
                    "pm.test(\"Status code is 404\", function () {",
                    "    pm.expect(pm.response.code).to.equal(404);",
                    "});"
                  ],
                  "type": "text/javascript"
                }
              }
            ],
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/campaigns/{{test_campaign_id}}",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns", "{{test_campaign_id}}"]
              },
              "description": "Attempts to retrieve the deleted campaign, which should return a 404 error."
            }
          }
        ],
        "description": "A series of tests that run in sequence to test the complete campaign lifecycle (create, update, get, delete)."
      },
      {
        "name": "Campaigns",
        "item": [
          {
            "name": "List Campaigns",
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/campaigns?status=active&limit=20&offset=0&sort=created_at&order=desc",
                "protocol": "http",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns"],
                "query": [
                  {
                    "key": "status",
                    "value": "active",
                    "description": "Filter by status (active, paused, archived)"
                  },
                  {
                    "key": "limit",
                    "value": "20",
                    "description": "Number of results per page (1-100)"
                  },
                  {
                    "key": "offset",
                    "value": "0",
                    "description": "Number of results to skip"
                  },
                  {
                    "key": "sort",
                    "value": "created_at",
                    "description": "Field to sort by (name, created_at, start_date)"
                  },
                  {
                    "key": "order",
                    "value": "desc",
                    "description": "Sort order (asc, desc)"
                  }
                ]
              },
              "description": "Retrieves a paginated list of campaigns."
            }
          },
          {
            "name": "Get Campaign by ID",
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/campaigns/1",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns", "1"]
              },
              "description": "Retrieves a specific campaign by ID, including its targeting rules."
            }
          },
          {
            "name": "Create Campaign",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Black Friday Sale\",\n  \"redirect_url\": \"https://example.com/black-friday\",\n  \"start_date\": 1637971200000,\n  \"end_date\": 1638316800000,\n  \"targeting_rules\": [\n    {\n      \"targeting_rule_type_id\": 4,\n      \"targeting_method\": \"whitelist\",\n      \"rule\": \"1,2\",\n      \"weight\": 100\n    },\n    {\n      \"targeting_rule_type_id\": 2,\n      \"targeting_method\": \"whitelist\",\n      \"rule\": \"mobile\",\n      \"weight\": 100\n    }\n  ]\n}"
              },
              "url": {
                "raw": "{{base_url}}/api/campaigns",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns"]
              },
              "description": "Creates a new campaign."
            }
          },
          {
            "name": "Update Campaign",
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Updated Campaign Name\",\n  \"redirect_url\": \"https://example.com/updated\",\n  \"status\": \"active\"\n}"
              },
              "url": {
                "raw": "{{base_url}}/api/campaigns/3",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns", "3"]
              },
              "description": "Updates an existing campaign."
            }
          },
          {
            "name": "Delete Campaign",
            "request": {
              "method": "DELETE",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/campaigns/3",
                "host": ["{{base_url}}"],
                "path": ["api", "campaigns", "3"]
              },
              "description": "Deletes a campaign and its associated targeting rules."
            }
          }
        ],
        "description": "Endpoints for managing advertising campaigns."
      },
      {
        "name": "Targeting Rule Types",
        "item": [
          {
            "name": "List Targeting Rule Types",
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/targeting-rule-types",
                "host": ["{{base_url}}"],
                "path": ["api", "targeting-rule-types"]
              },
              "description": "Retrieves a list of all targeting rule types."
            }
          }
        ],
        "description": "Endpoints for retrieving information about targeting rule types."
      },
      {
        "name": "Zones",
        "item": [
          {
            "name": "List Zones",
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/zones?status=active&limit=20&offset=0&sort=created_at&order=desc",
                "host": ["{{base_url}}"],
                "path": ["api", "zones"],
                "query": [
                  {
                    "key": "status",
                    "value": "active",
                    "description": "Filter by status (active, inactive)"
                  },
                  {
                    "key": "limit",
                    "value": "20",
                    "description": "Number of results per page (1-100)"
                  },
                  {
                    "key": "offset",
                    "value": "0",
                    "description": "Number of results to skip"
                  },
                  {
                    "key": "sort",
                    "value": "created_at",
                    "description": "Field to sort by (name, created_at, site_url)"
                  },
                  {
                    "key": "order",
                    "value": "desc",
                    "description": "Sort order (asc, desc)"
                  }
                ]
              },
              "description": "Retrieves a paginated list of zones."
            }
          },
          {
            "name": "Get Zone by ID",
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/zones/1",
                "host": ["{{base_url}}"],
                "path": ["api", "zones", "1"]
              },
              "description": "Retrieves a specific zone by ID."
            }
          },
          {
            "name": "Create Zone",
            "request": {
              "method": "POST",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Mobile Footer Ad\",\n  \"site_url\": \"https://example.com/mobile\",\n  \"traffic_back_url\": \"https://example.com/mobile/fallback\"\n}"
              },
              "url": {
                "raw": "{{base_url}}/api/zones",
                "host": ["{{base_url}}"],
                "path": ["api", "zones"]
              },
              "description": "Creates a new zone."
            }
          },
          {
            "name": "Update Zone",
            "request": {
              "method": "PUT",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\n  \"name\": \"Updated Zone Name\",\n  \"site_url\": \"https://example.com/updated\",\n  \"status\": \"inactive\"\n}"
              },
              "url": {
                "raw": "{{base_url}}/api/zones/3",
                "host": ["{{base_url}}"],
                "path": ["api", "zones", "3"]
              },
              "description": "Updates an existing zone."
            }
          },
          {
            "name": "Delete Zone",
            "request": {
              "method": "DELETE",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/zones/3",
                "host": ["{{base_url}}"],
                "path": ["api", "zones", "3"]
              },
              "description": "Deletes a zone."
            }
          }
        ],
        "description": "Endpoints for managing ad placement zones."
      },
      {
        "name": "Ad Events",
        "item": [
          {
            "name": "List Ad Events",
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/ad_events?event_type=click&limit=20&offset=0&sort=event_time&order=desc",
                "host": ["{{base_url}}"],
                "path": ["api", "ad_events"],
                "query": [
                  {
                    "key": "event_type",
                    "value": "click",
                    "description": "Filter by event type (impression, click, conversion)"
                  },
                  {
                    "key": "campaign_id",
                    "value": "",
                    "description": "Filter by campaign ID",
                    "disabled": true
                  },
                  {
                    "key": "zone_id",
                    "value": "",
                    "description": "Filter by zone ID",
                    "disabled": true
                  },
                  {
                    "key": "country",
                    "value": "",
                    "description": "Filter by country code",
                    "disabled": true
                  },
                  {
                    "key": "device_type",
                    "value": "",
                    "description": "Filter by device type (desktop, mobile, tablet)",
                    "disabled": true
                  },
                  {
                    "key": "start_time",
                    "value": "",
                    "description": "Filter events after this timestamp",
                    "disabled": true
                  },
                  {
                    "key": "end_time",
                    "value": "",
                    "description": "Filter events before this timestamp",
                    "disabled": true
                  },
                  {
                    "key": "limit",
                    "value": "20",
                    "description": "Number of results per page (1-100)"
                  },
                  {
                    "key": "offset",
                    "value": "0",
                    "description": "Number of results to skip"
                  },
                  {
                    "key": "sort",
                    "value": "event_time",
                    "description": "Field to sort by (id, event_time, event_type, campaign_id)"
                  },
                  {
                    "key": "order",
                    "value": "desc",
                    "description": "Sort order (asc, desc)"
                  }
                ]
              },
              "description": "Retrieves a paginated list of ad events with filtering options."
            }
          }
        ],
        "description": "Endpoints for retrieving ad interaction events like impressions and clicks."
      },
      {
        "name": "Statistics",
        "item": [
          {
            "name": "Get Statistics",
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/stats?from={{$timestamp}}&to={{$timestamp}}&group_by=date",
                "host": ["{{base_url}}"],
                "path": ["api", "stats"],
                "query": [
                  {
                    "key": "from",
                    "value": "{{$timestamp}}",
                    "description": "Start timestamp in milliseconds"
                  },
                  {
                    "key": "to",
                    "value": "{{$timestamp}}",
                    "description": "End timestamp in milliseconds"
                  },
                  {
                    "key": "campaign_ids",
                    "value": "",
                    "description": "Comma-separated list of campaign IDs to filter by",
                    "disabled": true
                  },
                  {
                    "key": "zone_ids",
                    "value": "",
                    "description": "Comma-separated list of zone IDs to filter by",
                    "disabled": true
                  },
                  {
                    "key": "group_by",
                    "value": "date",
                    "description": "Field to group by (date, campaign_id, zone_id, country)"
                  }
                ]
              },
              "description": "Retrieves aggregated statistics based on various filters and grouping options."
            }
          }
        ],
        "description": "Endpoints for retrieving performance metrics and analytics."
      }
    ]
  }
  